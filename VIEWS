-- working with VIEWS

CREATE VIEW purchase_order_overview_2 AS 
SELECT sales_order.purchase_order_number, customer.company, 
sales_item.quantity, product.supplier, product.name, item.price, 
-- (sales_item.quantity * item.price) AS Total,
--Remove concat if you want this to be updatable when changes happens
CONCAT(sales_person.first_name, ' ', sales_person.last_name) AS Salesperson
FROM sales_order 
JOIN sales_item 
ON sales_item.sales_order_id = sales_order.id  -- Tables go together by joining on sales order id
-- Any time you join tables you need to find foreign and primary keys that match up
JOIN item 
ON item.id = sales_item.item_id
JOIN customer
ON sales_order.cust_id = customer.id  -- join customer using customer ids
JOIN product
ON product.id = item.product_id
JOIN sales_person
ON sales_person.id = sales_order.sales_person_id
ORDER BY purchase_order_number;
-- When data in the database is updated so is the view. You can use the view in all the same ways you can a regular table. If you want it to be updatable though it canâ€™t include DISTINCT, UNION, Aggregate Functions, GROUP BY or HAVING.

SELECT * FROM purchase_order_overview

-- MAKE IT UPDATABLE
SELECT *, (quantity * price) AS total FROM purchase_order_overview_2

-- Delete a view
-- DROP VIEW purchase_order_overview_2